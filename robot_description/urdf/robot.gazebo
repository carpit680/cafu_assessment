<?xml version="1.0" ?>
<robot name="robot" xmlns:xacro="http://www.ros.org/wiki/xacro" >

<xacro:property name="body_color" value="Gazebo/Red" />
<xacro:property name="wheels" value="Gazebo/Black" />
<xacro:property name="lidar" value="Gazebo/Blue" />

<!-- <gazebo>
  <plugin name="control" filename="libgazebo_ros_control.so"/>
</gazebo> -->

<gazebo reference="base_link">
  <material>${body_color}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <gravity>true</gravity>
  
</gazebo>

<gazebo reference="wheel_back_left_1">
  <material>${wheels}</material>
  <!-- <mu1>0.2</mu1>
  <mu2>0.2</mu2> -->
  <selfCollide>true</selfCollide>
  <kp>1000000.0</kp> <!-- kp and kd for rubber -->
  <kd>100.0</kd>
  <!-- <mu1>1.0</mu1>
  <mu2>1.0</mu2> -->
  <maxVel>1.0</maxVel>
  <minDepth>0.01</minDepth>
</gazebo>

<gazebo reference="wheel_back_right_1">
  <material>${wheels}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <kp>1000000.0</kp> <!-- kp and kd for rubber -->
  <kd>100.0</kd>
  <!-- <mu1>1.0</mu1>
  <mu2>1.0</mu2> -->
  <maxVel>1.0</maxVel>
  <minDepth>0.01</minDepth>
</gazebo>

<gazebo reference="wheel_front_right_1">
  <material>${wheels}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <kp>1000000.0</kp> <!-- kp and kd for rubber -->
  <kd>100.0</kd>
  <!-- <mu1>1.0</mu1>
  <mu2>1.0</mu2> -->
  <maxVel>1.0</maxVel>
  <minDepth>0.01</minDepth>
</gazebo>

<gazebo reference="wheel_front_left_1">
  <material>${wheels}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
  <kp>1000000.0</kp> <!-- kp and kd for rubber -->
  <kd>100.0</kd>
  <!-- <mu1>1.0</mu1>
  <mu2>1.0</mu2> -->
  <maxVel>1.0</maxVel>
  <minDepth>0.01</minDepth>
</gazebo>

<!-- <gazebo reference="lidar_1">
  <material>${lidar}</material>
  <mu1>0.2</mu1>
  <mu2>0.2</mu2>
  <selfCollide>true</selfCollide>
</gazebo> -->

<!-- <gazebo>
  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>100.0</updateRate>
    <robotNamespace>/</robotNamespace>
    <leftFrontJoint>joint_front_left</leftFrontJoint>
    <rightFrontJoint>joint_front_right</rightFrontJoint>
    <leftRearJoint>joint_back_left</leftRearJoint>
    <rightRearJoint>joint_back_right</rightRearJoint>
    <wheelSeparation>0.5</wheelSeparation>
    <wheelDiameter>0.25</wheelDiameter>
    <robotBaseFrame>robot_footprint</robotBaseFrame>
    <torque>1000</torque>
    <MaxForce>50.0</MaxForce>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <broadcastTF>true</broadcastTF>
    <covariance_x>0.001</covariance_x> 
    <covariance_y>0.001</covariance_y> 
    <covariance_yaw>0.01</covariance_yaw> 
  </plugin>
</gazebo> -->

<gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
          <updateRate>100.0</updateRate>
          <robotNamespace>/</robotNamespace>   
          <!-- <leftFrontJoint>joint_back_right</leftFrontJoint>
          <rightFrontJoint>joint_back_left</rightFrontJoint>
          <leftRearJoint>joint_front_right</leftRearJoint>
          <rightRearJoint>joint_front_left</rightRearJoint> -->
          <leftFrontJoint>joint_front_left</leftFrontJoint>
          <rightFrontJoint>joint_front_right</rightFrontJoint>
          <leftRearJoint>joint_back_left</leftRearJoint>
          <rightRearJoint>joint_back_right</rightRearJoint>
          <wheelSeparation>5</wheelSeparation>
          <wheelDiameter>0.6</wheelDiameter> 
          <robotBaseFrame>robot_footprint</robotBaseFrame>  
          <!-- <torque>20</torque> -->
          <torque>250</torque>
          <MaxForce>50.0</MaxForce>
          <topicName>/cmd_vel</topicName>
          <broadcastTF>true</broadcastTF>
          <commandTopic>/cmd_vel</commandTopic>
          <odometryTopic>/odom</odometryTopic>
          <odometryFrame>/odom</odometryFrame>
          <covariance_x>0.001</covariance_x>
          <covariance_y>0.001</covariance_y>
          <covariance_yaw>0.01</covariance_yaw>
    </plugin>
</gazebo>

<gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>/</robotNamespace>
    </plugin>
</gazebo>

<!-- hokuyo -->
  <gazebo reference="lidar_1">
    <material>${lidar}</material>
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1440</samples>
            <resolution>1</resolution>
            <!-- <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle> -->
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/laser/scan</topicName>
        <frameName>lidar_1</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>
